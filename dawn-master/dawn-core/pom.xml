<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.7.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.dawn</groupId>
	<artifactId>dawn-core</artifactId>
	<version>0.0.1</version>
	<name>dawn-core</name>
	<description>`dawn`核心依赖模块
		<!--scope标签：-->
			<!--compile：默认的scope，表示 dependency 都可以在生命周期中使用。-->
			<!--而且，这些dependencies 会传递到依赖的项目中。适用于所有阶段，会随着项目一起发布。-->
			<!--provided：跟compile相似，但是表明了dependency 由JDK或者容器提供，例如Servlet AP和一些-->
		    <!--Java EE APIs。这个scope 只能作用在编译和测试时，同时没有传递性。-->
			<!--runtime：表示dependency不作用在编译时，但会作用在运行和测试时，如JDBC驱动，适用运行和测试阶段。-->
			<!--test：表示dependency作用在测试时，不作用在运行时。 只在测试时使用，-->
			<!--用于编译和运行测试代码。不会随项目发布。-->
			<!--system：跟provided 相似，但是在系统中要以外部JAR包的形式提供，maven不会在repository查找它。-->
	</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<druid.version>1.1.10</druid.version>
	</properties>

	<dependencies>

		<!--SpringBoot核心依赖，包括auto-configuration , logging和YAML-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- spring aop -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<!--热部署（无需重启应用）：需按IDEA的编译或者ctrl+f9,eclipse：ctrl+s-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!--Java注释库，有助于减少样板代码-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<!-- mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid.version}</version>
		</dependency>

		<!-- actuator监控中心 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- 加密组件:用于项目配置文件里，所有涉及信息安全的配置项（或字段）加密处理
		jasypt-spring-boot组件会自动将ENC()语法包裹的配置项加密字段自动解密，数据得以还原-->
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>3.0.2</version>
		</dependency>

	</dependencies>

</project>
